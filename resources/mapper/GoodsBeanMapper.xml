<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hanson.mapper.GoodsBeanMapper">
    <resultMap id="BaseResultMap" type="com.hanson.entity.GoodsBean">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="image" jdbcType="VARCHAR" property="image"/>
        <result column="slider_image" jdbcType="VARCHAR" property="sliderImage"/>
        <result column="goods_name" jdbcType="VARCHAR" property="goodsName"/>
        <result column="goods_info" jdbcType="VARCHAR" property="goodsInfo"/>
        <result column="keywords" jdbcType="VARCHAR" property="keywords"/>
        <result column="spec_type" jdbcType="VARCHAR" property="specType"/>
        <result column="price" jdbcType="INTEGER" property="price"/>
        <result column="vip_price" jdbcType="INTEGER" property="vipPrice"/>
        <result column="old_price" jdbcType="INTEGER" property="oldPrice"/>
        <result column="sales" jdbcType="INTEGER" property="sales"/>
        <result column="stock" jdbcType="INTEGER" property="stock"/>
        <result column="is_show" jdbcType="INTEGER" property="isShow"/>
        <result column="is_hot" jdbcType="INTEGER" property="isHot"/>
        <result column="is_benefit" jdbcType="INTEGER" property="isBenefit"/>
        <result column="is_best" jdbcType="INTEGER" property="isBest"/>
        <result column="is_seckill" jdbcType="INTEGER" property="isSeckill"/>
        <result column="is_bargain" jdbcType="INTEGER" property="isBargain"/>
        <result column="is_bevip" jdbcType="INTEGER" property="isBevip"/>
        <result column="is_bepartner" jdbcType="INTEGER" property="isBepartner"/>
        <result column="score" jdbcType="INTEGER" property="score"/>
        <result column="spread_money" jdbcType="INTEGER" property="spreadMoney"/>
        <result column="spread_child_money" jdbcType="INTEGER" property="spreadChildMoney"/>
        <result column="sort" jdbcType="INTEGER" property="sort"/>
        <result column="mer_id" jdbcType="INTEGER" property="merId"/>
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from t_goods
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.hanson.entity.GoodsBean" useGeneratedKeys="true" keyProperty="id">
        insert into t_goods (id, image, slider_image,
        goods_name, goods_info, keywords,
        price, vip_price, old_price,
        sales, stock, is_show,
        is_hot, is_benefit, is_best,
        is_seckill, is_bargain, sort,
        mer_id, create_date,spec_type,is_bevip,is_bepartner,score,spread_money,spread_child_money)
        values (#{id,jdbcType=INTEGER}, #{image,jdbcType=VARCHAR}, #{sliderImage,jdbcType=VARCHAR},
        #{goodsName,jdbcType=VARCHAR}, #{goodsInfo,jdbcType=VARCHAR}, #{keywords,jdbcType=VARCHAR},
        #{price,jdbcType=INTEGER}, #{vipPrice,jdbcType=INTEGER}, #{oldPrice,jdbcType=INTEGER},
        #{sales,jdbcType=INTEGER}, #{stock,jdbcType=INTEGER}, #{isShow,jdbcType=INTEGER},
        #{isHot,jdbcType=INTEGER}, #{isBenefit,jdbcType=INTEGER}, #{isBest,jdbcType=INTEGER},
        #{isSeckill,jdbcType=INTEGER}, #{isBargain,jdbcType=INTEGER}, #{sort,jdbcType=INTEGER},
        #{merId,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP},#{specType,jdbcType=VARCHAR},
        #{isBevip,jdbcType=INTEGER}, #{isBepartner,jdbcType=INTEGER}, #{score,jdbcType=INTEGER}, #{spreadMoney,jdbcType=INTEGER}, #{spreadChildMoney,jdbcType=INTEGER})
    </insert>
    <update id="updateSortById" parameterType="java.lang.Integer">
        update t_goods set sort = #{sort,jdbcType=INTEGER} where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateIsShowById" parameterType="java.lang.Integer">
        update t_goods set is_show = #{isShow,jdbcType=INTEGER} where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.hanson.entity.GoodsBean">
        update t_goods
        set image = #{image,jdbcType=VARCHAR},
        slider_image = #{sliderImage,jdbcType=VARCHAR},
        goods_name = #{goodsName,jdbcType=VARCHAR},
        goods_info = #{goodsInfo,jdbcType=VARCHAR},
        keywords = #{keywords,jdbcType=VARCHAR},
        price = #{price,jdbcType=INTEGER},
        vip_price = #{vipPrice,jdbcType=INTEGER},
        old_price = #{oldPrice,jdbcType=INTEGER},
        sales = #{sales,jdbcType=INTEGER},
        stock = #{stock,jdbcType=INTEGER},
        is_show = #{isShow,jdbcType=INTEGER},
        is_hot = #{isHot,jdbcType=INTEGER},
        is_benefit = #{isBenefit,jdbcType=INTEGER},
        is_best = #{isBest,jdbcType=INTEGER},
        is_seckill = #{isSeckill,jdbcType=INTEGER},
        is_bargain = #{isBargain,jdbcType=INTEGER},
        is_bevip = #{isBevip,jdbcType=INTEGER},
        is_bepartner = #{isBepartner,jdbcType=INTEGER},
        sort = #{sort,jdbcType=INTEGER},
        mer_id = #{merId,jdbcType=INTEGER},
        create_date = #{createDate,jdbcType=TIMESTAMP},
        spec_type = #{specType,jdbcType=VARCHAR},
        score = #{score,jdbcType=INTEGER},
        spread_money = #{spreadMoney,jdbcType=INTEGER},
        spread_child_money = #{spreadChildMoney,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select id, image, slider_image, goods_name, goods_info, keywords, price, vip_price,
        old_price, sales, stock, is_show, is_hot, is_benefit, is_best, is_seckill, is_bargain,
        sort, mer_id, create_date,spec_type,is_bevip,is_bepartner,score,spread_money,spread_child_money
        from t_goods
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select id, image, slider_image, goods_name, goods_info, keywords, price, vip_price,
        old_price, sales, stock, is_show, is_hot, is_benefit, is_best, is_seckill, is_bargain,
        sort, mer_id, create_date,spec_type,is_bevip,is_bepartner,score,spread_money,spread_child_money
        from t_goods
    </select>
    <select id="listGoods" resultMap="BaseResultMap">
        select id, image, slider_image, goods_name, goods_info, keywords, price, vip_price,
        old_price, sales, stock, is_show, is_hot, is_benefit, is_best, is_seckill, is_bargain,
        sort, mer_id, create_date,spec_type,is_bevip,is_bepartner,score
        from t_goods where
        <if test='goodsBean.merId != null and goodsBean.merId == 0'>
            1=1
        </if>
        <if test='goodsBean.merId != null and goodsBean.merId != 0'>
            mer_id = #{goodsBean.merId}
        </if>
        <if test='goodsBean.goodsName != null and goodsBean.goodsName != ""'>
            and (keywords like concat('%', #{goodsBean.goodsName},'%') or goods_name like concat('%', #{goodsBean.goodsName},'%') or id like concat('%', #{goodsBean.goodsName},'%'))
        </if>
        <if test="goodsBean.goodsType != null">
            and  id in (select goods_id from t_goods_type_mapping where type_id = #{goodsBean.goodsType} or type_id in (select id from t_goods_type where pid=#{goodsBean.goodsType}))
        </if>
        <if test='goodsBean.searchType != null and goodsBean.searchType == 1'>
            and stock > 0 and is_show = 1
        </if>
        <if test='goodsBean.searchType != null and goodsBean.searchType == 2'>
            and stock > 0 and is_show = 0
        </if>
        <if test='goodsBean.searchType != null and goodsBean.searchType == 3'>
            and stock  <![CDATA[ <= ]]> 0
        </if>
        <if test='goodsBean.isSeckill != null and goodsBean.isSeckill != -1'>
            and is_seckill = #{goodsBean.isSeckill}
        </if>
        <if test='goodsBean.isBargain != null and goodsBean.isBargain != -1'>
            and is_bargain = #{goodsBean.isBargain}
        </if>
        order by sort desc,create_date desc
    </select>
    <select id="listSimpleGoods" resultMap="BaseResultMap" parameterType="com.hanson.common.bean.SearchBean">
        select id, image, goods_name, price,vip_price,
        old_price,sales
        from t_goods
        where is_show=1
        <if test="searchBean.isHot != null">
            and  is_hot = #{searchBean.isHot}
        </if>
        <if test="searchBean.isBenefit != null">
            and  is_benefit = #{searchBean.isBenefit}
        </if>
        <if test='searchBean.isBest != null and searchBean.isBest != ""'>
            and  is_best = #{searchBean.isBest}
        </if>
        <if test="searchBean.isBevip != null">
            and  is_bevip = #{searchBean.isBevip}
        </if>
        <if test="searchBean.isBepartner != null">
            and  is_bepartner = #{searchBean.isBepartner}
        </if>
        <if test="searchBean.keyWords != null and searchBean.keyWords != ''">
            and (keywords like concat('%', #{searchBean.keyWords},'%') or goods_name like concat('%', #{searchBean.keyWords},'%'))
        </if>
        <if test="searchBean.goodsIdList.size()>0">
            and id in
            <foreach collection="searchBean.goodsIdList" index="index" item="item" open="(" separator="," close=")">
                #{item.goodsId}
            </foreach>
        </if>
        <if test="searchBean.sortPrice == 0 and searchBean.sortSales == 0">
            order by sort desc,create_date desc
        </if>
        <if test="searchBean.sortPrice == 1 and searchBean.sortSales == 0">
            order by price
        </if>
        <if test="searchBean.sortPrice == 2 and searchBean.sortSales == 0">
            order by price desc
        </if>
        <if test="searchBean.sortPrice == 0 and searchBean.sortSales == 1">
            order by sales
        </if>
        <if test="searchBean.sortPrice == 0 and searchBean.sortSales == 2">
            order by sales desc
        </if>
        <if test="searchBean.sortPrice == 1 and searchBean.sortSales == 1">
            order by price,sales
        </if>
        <if test="searchBean.sortPrice == 2 and searchBean.sortSales == 2">
            order by price desc,sales desc
        </if>
        <if test="searchBean.sortPrice == 1 and searchBean.sortSales == 2">
            order by price,sales desc
        </if>
        <if test="searchBean.sortPrice == 2 and searchBean.sortSales == 1">
            order by price desc,sales
        </if>
    </select>
    <select id="listSimpleGoodsByIds" resultMap="BaseResultMap">
        select id, image, goods_name,vip_price,price,
        old_price,sales
        from t_goods
        where is_show=1
        and id in
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item.goodsId}
        </foreach>
        order by sort desc,create_date desc
    </select>
    <select id="listRecommendGoods" resultMap="BaseResultMap">
        select id, image, goods_name,vip_price,price,
        old_price,sales
        from t_goods
        where is_show=1
        order by sales desc limit 0,4
    </select>
    <select id="countAlarmGoods" resultType="java.lang.Integer">
        select count(1)
        from t_goods where stock  <![CDATA[ <= ]]> 10
    </select>
</mapper>