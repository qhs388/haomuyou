<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hanson.mapper.ApplyInfoBeanMapper">
  <resultMap id="BaseResultMap" type="com.hanson.entity.ApplyInfoBean">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="open_id" jdbcType="VARCHAR" property="openId" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="sfzh" jdbcType="VARCHAR" property="sfzh" />
    <result column="zzhm" jdbcType="VARCHAR" property="zzhm" />
    <result column="yyzz_image" jdbcType="VARCHAR" property="yyzzImage" />
    <result column="sfzh_image1" jdbcType="VARCHAR" property="sfzhImage1" />
    <result column="sfzh_image2" jdbcType="VARCHAR" property="sfzhImage2" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="pay_money" jdbcType="INTEGER" property="payMoney" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="pay_time" jdbcType="TIMESTAMP" property="payTime" />
    <result column="is_pay" jdbcType="INTEGER" property="isPay" />
    <result column="change_type" jdbcType="INTEGER" property="changeType" />
    <result column="pay_seq" jdbcType="VARCHAR" property="paySeq" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_apply_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hanson.entity.ApplyInfoBean">
    insert into t_apply_info (id, open_id, type, 
      name, phone, address, 
      sfzh, zzhm, yyzz_image, 
      sfzh_image1, sfzh_image2, status, 
      create_date, update_date,remark,pay_seq,change_type,pay_time)
    values (#{id,jdbcType=INTEGER}, #{openId,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{sfzh,jdbcType=VARCHAR}, #{zzhm,jdbcType=VARCHAR}, #{yyzzImage,jdbcType=VARCHAR}, 
      #{sfzhImage1,jdbcType=VARCHAR}, #{sfzhImage2,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}, #{paySeq,jdbcType=VARCHAR},#{changeType,jdbcType=INTEGER}, #{payTime,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.hanson.entity.ApplyInfoBean">
    update t_apply_info
    set open_id = #{openId,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      sfzh = #{sfzh,jdbcType=VARCHAR},
      zzhm = #{zzhm,jdbcType=VARCHAR},
      yyzz_image = #{yyzzImage,jdbcType=VARCHAR},
      sfzh_image1 = #{sfzhImage1,jdbcType=VARCHAR},
      sfzh_image2 = #{sfzhImage2,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      is_pay = #{isPay,jdbcType=INTEGER},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      change_type = #{changeType,jdbcType=INTEGER},
      pay_seq = #{paySeq,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, open_id, type, name, phone, address, sfzh, zzhm, yyzz_image, sfzh_image1, 
    sfzh_image2, status, create_date, update_date,remark,is_pay,pay_seq,pay_time,pay_money
    from t_apply_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, open_id, type, name, phone, address, sfzh, zzhm, yyzz_image, sfzh_image1, 
    sfzh_image2, status, create_date, update_date,remark,is_pay,pay_seq,pay_time,pay_money
    from t_apply_info
  </select>
  <select id="selectByOpenIdAndType" resultMap="BaseResultMap">
    select id, open_id, type, name, phone, address, sfzh, zzhm, yyzz_image, sfzh_image1,
    sfzh_image2, status, create_date, update_date,remark,is_pay,pay_seq,pay_time,pay_money
    from t_apply_info where open_id = #{openId,jdbcType=VARCHAR} and type = #{type,jdbcType=INTEGER}
  </select>
  <select id="selectByPaySeq"  resultMap="BaseResultMap">
    select id, open_id, type, name, phone, address, sfzh, zzhm, yyzz_image, sfzh_image1,
    sfzh_image2, status, create_date, update_date,remark,is_pay,pay_seq,pay_time,pay_money
    from t_apply_info where pay_seq = #{paySeq,jdbcType=VARCHAR}
  </select>
  <select id="listApplyInfoBean" resultMap="BaseResultMap">
    select id, open_id, type, name, phone, address, sfzh, zzhm, yyzz_image, sfzh_image1,
    sfzh_image2, status, create_date, update_date,remark,is_pay,pay_seq,pay_time,pay_money
    from t_apply_info where status >= 0
    <if test="applyInfoBean.type != null and applyInfoBean.type != ''">
      and  type = #{applyInfoBean.type}
    </if>
    <if test="applyInfoBean.status != null and applyInfoBean.status != ''">
      and  status = #{applyInfoBean.status}
    </if>
    <if test="applyInfoBean.name != null and applyInfoBean.name != ''">
      and (name like concat('%', #{applyInfoBean.name},'%') or phone like concat('%', #{applyInfoBean.name},'%'))
    </if>
    order by create_date desc
  </select>
  <update id="updatePayStatusByPaySeq">
    update t_apply_info
    set
    status = 1,
    pay_money =  #{payMoney,jdbcType=INTEGER},
    is_pay = #{isPay,jdbcType=INTEGER},
    pay_time = now()
    where pay_seq = #{paySeq,jdbcType=VARCHAR}
  </update>
  <delete id="deleteByOpenIdAndType">
    delete
    from t_apply_info where open_id = #{openId,jdbcType=VARCHAR} and type = #{type,jdbcType=INTEGER}
  </delete>
</mapper>