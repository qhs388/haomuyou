<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hanson.mapper.GoodsAttrValueBeanMapper">
  <resultMap id="BaseResultMap" type="com.hanson.entity.GoodsAttrValueBean">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="suk" jdbcType="VARCHAR" property="suk" />
    <result column="stock" jdbcType="INTEGER" property="stock" />
    <result column="sales" jdbcType="INTEGER" property="sales" />
    <result column="price" jdbcType="VARCHAR" property="price" />
    <result column="vip_price" jdbcType="VARCHAR" property="vipPrice" />
    <result column="old_price" jdbcType="VARCHAR" property="oldPrice" />
    <result column="image" jdbcType="VARCHAR" property="image" />
    <result column="detail" jdbcType="VARCHAR" property="detail" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_goods_attr_value
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByGoodsId" parameterType="java.lang.Integer">
    delete from t_goods_attr_value
    where goods_id = #{goodsId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hanson.entity.GoodsAttrValueBean">
    insert into t_goods_attr_value (id, goods_id, suk, 
      stock, sales, price, 
      old_price, image,detail,vip_price)
    values (#{id,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER}, #{suk,jdbcType=VARCHAR}, 
      #{stock,jdbcType=INTEGER}, #{sales,jdbcType=INTEGER}, #{price,jdbcType=INTEGER},
      #{oldPrice,jdbcType=INTEGER}, #{image,jdbcType=VARCHAR},#{detail,jdbcType=VARCHAR},#{vipPrice,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.hanson.entity.GoodsAttrValueBean">
    update t_goods_attr_value
    set goods_id = #{goodsId,jdbcType=INTEGER},
      suk = #{suk,jdbcType=VARCHAR},
      stock = #{stock,jdbcType=INTEGER},
      sales = #{sales,jdbcType=INTEGER},
      price = #{price,jdbcType=VARCHAR},
      vip_price = #{vipPrice,jdbcType=VARCHAR},
      old_price = #{oldPrice,jdbcType=VARCHAR},
      image = #{image,jdbcType=VARCHAR},
    detail = #{detail,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, goods_id, suk, stock, sales, price, old_price, image,detail,vip_price
    from t_goods_attr_value
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByByGoodsId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, goods_id, suk, stock, sales, price, old_price, image,detail,vip_price
    from t_goods_attr_value
    where goods_id = #{goodsId,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, goods_id, suk, stock, sales, price, old_price, image,detail,vip_price
    from t_goods_attr_value
  </select>
  <select id="selectByByGoodsIdAndSuk" resultMap="BaseResultMap">
    select id, goods_id, suk, stock, sales, price, old_price, image,detail,vip_price
    from t_goods_attr_value
    where goods_id = #{goodsId,jdbcType=INTEGER}
    <if test='suk == null or suk == "默认"'>
      and  suk is null
    </if>
    <if test='suk != null and suk != "默认"'>
      and suk = #{suk,jdbcType=VARCHAR}
    </if>
  </select>
</mapper>