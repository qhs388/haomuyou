<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hanson.mapper.GoodsCommentBeanMapper">
    <resultMap id="BaseResultMap" type="com.hanson.entity.GoodsCommentBean">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="goods_id" jdbcType="INTEGER" property="goodsId"/>
        <result column="open_id" jdbcType="VARCHAR" property="openId"/>
        <result column="star" jdbcType="INTEGER" property="star"/>
        <result column="score" jdbcType="INTEGER" property="score"/>
        <result column="comment" jdbcType="VARCHAR" property="comment"/>
        <result column="images" jdbcType="VARCHAR" property="images"/>
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from t_goods_comment
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.hanson.entity.GoodsCommentBean" useGeneratedKeys="true" keyProperty="id">
        insert into t_goods_comment (id, goods_id, open_id,
        star, score, comment,
        images, create_date)
        values (#{id,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER}, #{openId,jdbcType=VARCHAR},
        #{star,jdbcType=INTEGER}, #{score,jdbcType=INTEGER}, #{comment,jdbcType=VARCHAR},
        #{images,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.hanson.entity.GoodsCommentBean">
        update t_goods_comment
        set goods_id = #{goodsId,jdbcType=INTEGER},
        open_id = #{openId,jdbcType=VARCHAR},
        star = #{star,jdbcType=INTEGER},
        score = #{score,jdbcType=INTEGER},
        comment = #{comment,jdbcType=VARCHAR},
        images = #{images,jdbcType=VARCHAR},
        create_date = #{createDate,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select id, goods_id, open_id, star, score, comment, images, create_date
        from t_goods_comment
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select id, goods_id, open_id, star, score, comment, images, create_date
        from t_goods_comment
    </select>
    <select id="selectByGoodsId" resultMap="BaseResultMap">
        select id, goods_id, open_id, star, score, comment, images, create_date
        from t_goods_comment where goods_id = #{goodsId,jdbcType=INTEGER} order by create_date desc
    </select>
    <select id="countByGoodsId" resultType="java.util.Map" parameterType="java.lang.Integer">
        SELECT
            score,
            count( 1 ) num
        FROM
            t_goods_comment
        WHERE
            goods_id = #{goodsId,jdbcType=INTEGER}
            GROUP BY
            score
    </select>
</mapper>