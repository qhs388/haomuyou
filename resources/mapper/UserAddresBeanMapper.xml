<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hanson.mapper.UserAddresBeanMapper">
  <resultMap id="BaseResultMap" type="com.hanson.entity.UserAddresBean">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="open_id" jdbcType="VARCHAR" property="openId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="province" jdbcType="VARCHAR" property="province" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="district" jdbcType="VARCHAR" property="district" />
    <result column="detail" jdbcType="VARCHAR" property="detail" />
    <result column="is_default" jdbcType="INTEGER" property="isDefault" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_user_address
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hanson.entity.UserAddresBean">
    insert into t_user_address (id, open_id, user_name, 
      phone, province, city, 
      district, detail, is_default, 
      create_date, update_date)
    values (#{id,jdbcType=INTEGER}, #{openId,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR},
      #{phone,jdbcType=VARCHAR}, #{province,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, 
      #{district,jdbcType=VARCHAR}, #{detail,jdbcType=VARCHAR}, #{isDefault,jdbcType=INTEGER}, 
      #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.hanson.entity.UserAddresBean">
    update t_user_address
    set open_id = #{openId,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      province = #{province,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      district = #{district,jdbcType=VARCHAR},
      detail = #{detail,jdbcType=VARCHAR},
      is_default = #{isDefault,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, open_id, user_name, phone, province, city, district, detail, is_default, 
    create_date, update_date
    from t_user_address
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByOpenId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select id, open_id, user_name, phone, province, city, district, detail, is_default,
    create_date, update_date
    from t_user_address
    where open_id = #{openId,jdbcType=VARCHAR}
    order by create_date desc
  </select>
  <select id="countByOpenIdAndIsdefault" resultType="java.lang.Integer">
    select count(1)
    from t_user_address
    where open_id = #{openId,jdbcType=VARCHAR} and is_default = #{isDefault,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, open_id, user_name, phone, province, city, district, detail, is_default, 
    create_date, update_date
    from t_user_address
  </select>
  <update id="updateIsDefault">
    update t_user_address set is_default = #{isDefault,jdbcType=INTEGER} where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateIsDefaultByOpenId">
    update t_user_address set is_default = #{isDefault,jdbcType=INTEGER} where open_id = #{openId,jdbcType=VARCHAR}
  </update>
</mapper>